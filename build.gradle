plugins {
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'application'
    id 'java-library'
    id 'jacoco'
    id 'org.sonarqube' version '3.2.0'
    id 'com.google.cloud.tools.jib' version '3.2.1' apply false
}

ext {
    hapiVersion = '5.4.0'
    fromImage = 'gcr.io/distroless/java:11'
    imageRoot = 'nickrobisonusds'
}

allprojects {
    repositories {
        mavenCentral()
    }

    group = 'gov.usds.vaccineschedule'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '11'
}


subprojects {
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'
    apply plugin: 'application'

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled false
        }
        dependsOn test // tests are required to run before generating the report
    }

    test {
        useJUnitPlatform()
    }
}

task stage {
    dependsOn(['clean', ':api-application:assemble', ':wa-publisher:assemble'])
    assemble.mustRunAfter clean
    doLast {
        delete(fileTree(dir: "api-application/build", exclude: "libs"))
        delete(fileTree(dir: "api-application/build/libs", exclude: "*.jar"))

        delete(fileTree(dir: "publisher-application/build", exclude: "libs"))
        delete(fileTree(dir: "publisher-application/build/libs", exclude: "*.jar"))

        delete(fileTree(dir: "wa-publisher/build", exclude: "libs"))
        delete(fileTree(dir: "wa-publisher/build/libs", exclude: "*.jar"))

        delete(fileTree(dir: "common/build", exclude: "libs"))
        delete(fileTree(dir: "common/build/libs", exclude: "*.jar"))
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "nickrobison-usds_vaccine-scheduler"
        property "sonar.organization", "nickrobison-usds"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}


