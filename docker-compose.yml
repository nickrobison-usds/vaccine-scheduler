version: "3.5"

services:
  db:
    build:
      context: .
      dockerfile: db/Dockerfile
    image: db
    ports:
      - "${VS_DB_PORT:-5432}:${VS_DB_PORT:-5432}"
    environment:
      - POSTGRES_PASSWORD=this_is_not_safe
    volumes:
      - type: volume
        source: vs-dev-db-data
        target: /var/lib/postgresql/data
      # Create/use a named volume so that the database is not wiped if we recreate the container
      - type: volume
        source: vs-dev-db-gisdata
        target: /gisdata
      - type: bind
        source: ./db/setup-postgis.sh
        target: /docker-entrypoint-initdb.d/20-vs-db-creation.sh
  rabbitmq:
    image: rabbitmq:3.8.9-management-alpine
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - 5672:5672
      - 15672:15672
  redis:
    image: library/redis:alpine
    ports:
      - 6379:6379
  publisher:
    build:
      context: .
      dockerfile: publisher-application/Dockerfile
    image: vs-publisher
    command: bootRun
    environment:
      SPRING_PROFILES_ACTIVE: dockerized
    ports:
      - "${VS_PUBLISHER_PORT:-9090}:9090"
  api:
    build:
      context: .
      dockerfile: api-application/Dockerfile
    image: vs-api
    command: bootRun
    depends_on:
      - db
      - rabbitmq
    environment:
      SPRING_PROFILES_ACTIVE: dockerized
      SPRING_LIQUIBASE_ENABLED: "true"
    ports:
      - "${VS_API_PORT:-8080}:8080"
volumes:
  vs-dev-db-data:
  vs-dev-db-gisdata:
