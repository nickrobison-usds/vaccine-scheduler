version: "3.5"

services:
  db:
    build:
      context: .
      dockerfile: db/Dockerfile
    image: db
    ports:
      - "${VS_DB_PORT:-5432}:${VS_DB_PORT:-5432}"
    environment:
      - POSTGRES_PASSWORD=this_is_not_safe
    volumes:
      - type: volume
        source: vs-dev-db-data
        target: /var/lib/postgresql/data
      # Create/use a named volume so that the database is not wiped if we recreate the container
      - type: volume
        source: vs-dev-db-gisdata
        target: /gisdata
      - type: bind
        source: ./db/setup-postgis.sh
        target: /docker-entrypoint-initdb.d/20-vs-db-creation.sh
  rabbitmq:
    image: rabbitmq:3.8.9-management-alpine
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    ports:
      - 5672:5672
      - 15672:15672
  publisher:
    image: nickrobisonusds/vs-publisher
    environment:
      SPRING_PROFILES_ACTIVE: dockerized
    ports:
      - "${VS_PUBLISHER_PORT:-9090}:9090"
  wa-publisher:
    image: nickrobisonusds/wa-publisher
    environment:
      SPRING_PROFILES_ACTIVE: dockerized
    ports:
      - "${WA_PUBLISHER_PORT:-9091}:9091"
  api:
    image: nickrobisonusds/vs-api
    depends_on:
      - db
      - rabbitmq
    environment:
      SPRING_PROFILES_ACTIVE: dockerized,logstash
      SPRING_LIQUIBASE_ENABLED: "true"
    ports:
      - "${VS_API_PORT:-8080}:8080"

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.1
    environment:
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.1
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://elastic:9200
      ELASTICSEARCH_HOSTS: '["http://elastic:9200"]'
    depends_on:
      - elastic
  logstash:
    image: docker.elastic.co/logstash/logstash:7.12.1
    volumes:
      - type: bind
        source: ./config/logstash/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./config/logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    depends_on:
      - elastic
      - kibana


volumes:
  vs-dev-db-data:
  vs-dev-db-gisdata:
  elastic-data:
